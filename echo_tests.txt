ðŸ”¹ Pruebas caseras:

echo $USER "$USER" '$USER'

	echo "$USER" "$-HOLA" "$1ERROR" "$ ERROR" $ERROR
droura-s 569XZimsHOLA ERROR $ ERROR
	echo "$USER" "$-HOLA"
droura-s 569XZimsHOLA
	echo "$USER" "$-"
droura-s 569XZims en el de prueba sale droura-s $-

echo " '$USER' "
echo "$USER" "$-HOLA" "$1ERROR" "$ ERROR" $ERROR
echo hola "$USER $?" adios

echo hola ""    "" hola

echo hola ""    ccalcio""hola
bash: hola  ccalciohola
mini: hola  ccalcio  hola

echo "Hello world"
bash: Hello world


echo "hola $USER" "hola $?" '$?'
echo "$USER $? '$USER'"


ðŸ”¹ Pruebas con comillas
echo "Hello world"
echo 'Hello world'
echo "Hello 'world'"
echo 'Hello "world"'
echo "Hello (comilla sin cerrar)
echo 'Hello (comilla sin cerrar)


ðŸ”¹ Pruebas con espacios y caracteres especiales

echo " Hello world "
echo Hello   world
echo "*"
echo "$USER"
echo '$USER'

ðŸ”¹ Pruebas con -n
echo -n Hello
echo -nnnnnn Hello


* Fallo extraÃ±o que pasa cuando cambias el nÃºmero de "n" en echo -n a 4 (solo a veces)

static int	build_and_add(char *ptr, size_t start, size_t len, t_token **tokens)
{
	char	*new_word;

	new_word = ft_substr(ptr, start, len);
	if (!new_word)
	{
		printf("FREEEEEEEING\n\n");
		free_tokens(*tokens);
		*tokens = NULL;
		return (0);
	}
	if (!ft_strlen(new_word)) // Fixing the heisenbug of ghost tokens in echo -n
		free(new_word);
	else
		add_token(tokens, new_word);
	return (1);
}